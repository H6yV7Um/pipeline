<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd

        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--引入properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <!--数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" autowire="no">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--整合hibernate-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <!--指定二级缓存的外部实现类-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <!--!!!!!注意：大部分属性需要带hibernate标签!!!!!!!!!!-->
                <!--为true表示将Hibernate发送给数据库的sql显示出来 -->
                <prop key="hibernate.show_sql">false</prop>
                <!--对sql语句进行排版-->
                <prop key="hibernate.format_sql">false</prop>
                <!-- 添加自动创建数据库表格的配置 create|update|create-drop|validate-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!-- SQL方言，这边设定的是MySQL -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--getCurrentSession配置：thread（jdbc本地事务）|jta（jta事务） -->
                <prop key="current_session_context_class">thread</prop>
                <!--与spring结合-->
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate4.SpringSessionContext
                </prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.jlu</value>
            </list>
        </property>
    </bean>
    <!--spring整合hibernate事务-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--启用事务注解-->
    <tx:annotation-driven/>
    <aop:config>
        <aop:pointcut id="ServiceOperation"
                      expression="(execution(* com.jlu..*ServiceImpl.*(..)))"/>
        <aop:pointcut id="ExecutorOperation"
                      expression="(execution(* com.jlu..*Executor.*(..)))"/>
        <!--<aop:pointcut id="ValueGeneratorrOperation"-->
                      <!--expression="(execution(* com.jlu..*Generator.*(..)))"/>-->
        <aop:advisor pointcut-ref="ServiceOperation" advice-ref="txAdvice"/>
        <aop:advisor pointcut-ref="ExecutorOperation" advice-ref="txAdvice"/>
        <!--<aop:advisor pointcut-ref="ValueGeneratorrOperation" advice-ref="valueTxAdvice"/>-->
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" read-only="false" propagation="NOT_SUPPORTED"/>
            <tx:method name="*WithTransaction" read-only="false" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="valueTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" read-only="true" propagation="NOT_SUPPORTED"/>
        </tx:attributes>
    </tx:advice>


</beans>